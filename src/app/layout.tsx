import "@/styles/globals.css";
import "@/styles/prosemirror.css";
import "katex/dist/katex.min.css";

import { ThemeProvider } from "next-themes";

import ToastProvider from "@/components/ToastProvider";
import { ReduxProvider } from "@/lib/redux/provider";

import Menu from "@/components/tailwind/ui/menu";
import { Button } from "@/components/ui/button";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const menuItems = [
  { label: "Home", href: "/" },
  { label: "App Todo", href: "/app-todo" },
  { label: "Page todo", href: "/todo" },
  { label: "App Blog", href: "/app-blog" },
  { label: "Page Blog", href: "/blog" },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ReduxProvider>
          <ThemeProvider
            attribute="class"
            enableSystem
            disableTransitionOnChange
            defaultTheme="system"
          >
            <ToastProvider />
            <div className="flex min-h-screen flex-col items-center">
              <div className="flex w-full max-w-2xl items-center gap-2">
                {menuItems.map((item) => (
                  <Link href={item.href} key={item.href}>
                    <Button variant="ghost">{item.label}</Button>
                  </Link>
                ))}

                <Link href="/editor" className="ml-auto">
                  <Button variant="ghost">Editor</Button>
                </Link>
                <Menu />
              </div>
              {children}
            </div>
          </ThemeProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
